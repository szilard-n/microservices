version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbdata:/var/lib/postgresql/data
  keycloak:
    image: bitnami/keycloak:latest
    restart: unless-stopped
    environment:
      - KEYCLOAK_HTTP_RELATIVE_PATH=/auth
      - KEYCLOAK_DATABASE_HOST=${DB_HOST}
      - KEYCLOAK_DATABASE_NAME=${DB_NAME}
      - KEYCLOAK_DATABASE_USER=${DB_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_DATABASE_SCHEMA=${DB_SCHEMA}
      - KEYCLOAK_ADMIN_USER=${KEYCLOAK_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KC_HTTP_PORT=8181
    ports:
      - '8181:8181'
    depends_on:
      - postgres
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DB_NAME}?currentSchema=inventory_service
      - DATASOURCE_USERNAME=${DB_USER}
      - DATASOURCE_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_BASE_URL=http://keycloak:8181
    depends_on:
      - keycloak
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DB_NAME}?currentSchema=product_service
      - DATASOURCE_USERNAME=${DB_USER}
      - DATASOURCE_PASSWORD=${DB_PASSWORD}
      - INVENTORY_URL=http://inventory-service:8080
      - KEYCLOAK_BASE_URL=http://keycloak:8181
      - CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
    depends_on:
      - inventory-service
    ports:
      - '8080:8080'

volumes:
  dbdata: { }
